name: Publish to NPM

on:
  push:
    branches:
      - main # Only run on pushes to the main branch
    tags:
      - '*.*.*' # Stable releases
      - '*-alpha.*' # Alpha releases
      - '*-beta.*' # Beta releases
      - '*-canary.*' # Canary releases

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.x
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Debug Git status
        run: git status --porcelain
      - name: Run tests
        run: pnpm test:ci
      - name: Lint code
        run: pnpm lint
      - name: Build project
        run: pnpm run build
      - name: Extract package version
        id: extract_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
        env:
          GITHUB_OUTPUT: $GITHUB_OUTPUT
      - name: Check if version matches tag
        id: check_version
        run: |
          tag_name="${{ github.ref_name }}"
          package_version="${{ steps.extract_version.outputs.version }}"
          if [[ "$tag_name" == "$package_version" || "$tag_name" == *"$package_version-alpha"* || "$tag_name" == *"$package_version-beta"* || "$tag_name" == *"$package_version-canary"* ]]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
          else
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_OUTPUT: $GITHUB_OUTPUT
      - name: Publish package to NPM
        if: ${{ steps.check_version.outputs.should_publish == 'true' }}
        run: |
          if [[ "${{ github.ref_name }}" == *-alpha* ]]; then
            pnpm publish --access public --tag alpha
          elif [[ "${{ github.ref_name }}" == *-beta* ]]; then
            pnpm publish --access public --tag beta
          elif [[ "${{ github.ref_name }}" == *-canary* ]]; then
            pnpm publish --access public --tag canary
          else
            pnpm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}